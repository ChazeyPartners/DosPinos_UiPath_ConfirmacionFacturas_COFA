<Activity mc:Ignorable="sap sap2010" x:Class="EndProcess" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_ConDB" Type="InArgument(ui:DatabaseConnection)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>850.4,808.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>EndProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="35">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.Security</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="EndProcess" sap:VirtualizedContainerService.HintSize="375.2,704" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="vDtbConsolidado" />
      <Variable x:TypeArguments="x:Boolean" Name="vBoolExisteArchivo" />
      <Variable x:TypeArguments="x:Boolean" Name="vBoolParametrizacion" />
      <Variable x:TypeArguments="sd:DataTable" Name="vDtbPaisesAux" />
      <Variable x:TypeArguments="sd:DataTable" Name="vDtbUDN" />
      <Variable x:TypeArguments="sd:DataTable" Name="vDtbPaises" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="vListPantallas" />
      <Variable x:TypeArguments="sd:DataTable" Name="vDtbProcesados" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Cancelar proceso" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="saplogon" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SQL_ProcessExtraer workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Apps\SQL\SQL_EndProcessExtraer.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_ConDB">
          <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="in_ConDB" />
        </InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_DtbRegistros">
          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="vDtbProcesados" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="out_BoolProcess" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:WriteRange AddHeaders="True" DataTable="[vDtbProcesados]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="Procesados" StartingCell="A1" WorkbookPath="[path.Combine(in_Config(&quot;RutaArchivosGenerados&quot;).ToString, in_Config(&quot;FileAdjuntar&quot;).ToString)]" />
    <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="Se ha finalizado el proceso de Compensación de Saldos de Agentes, adjunto se envía el reporte de los casos gestionados." DisplayName="Enviar mensaje de correo de Outlook" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_4" IsBodyHtml="True" IsDraft="False" Subject=":: El robot ha finalizado la ejecución::" To="[in_Config(&quot;CorreoInforme&quot;).ToString]">
      <ui:SendOutlookMail.Files>
        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
          <InArgument x:TypeArguments="x:String">[path.Combine(in_Config("RutaArchivosGenerados").ToString, in_Config("FileAdjuntar").ToString)]</InArgument>
        </scg:List>
      </ui:SendOutlookMail.Files>
    </ui:SendOutlookMail>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_10">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="660.8,1504.8" sap2010:WorkflowViewState.IdRef="Sequence_51">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Secuencia" sap:VirtualizedContainerService.HintSize="619.2,460.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:PathExists DisplayName="Ruta existente" Exists="[vBoolExisteArchivo]" sap:VirtualizedContainerService.HintSize="577.6,90.4" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[Path.Combine(inConfig(&quot;RutaArchivosGenerados&quot;).ToString, inConfig(&quot;ArchivoSalida&quot;).ToString+&quot;.xlsx&quot;)]" PathType="File" />
            <If Condition="[vBoolExisteArchivo]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="577.6,237.6" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[vDtbConsolidado]" DisplayName="Leer rango" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[inConfig(&quot;HojaSalida&quot;).ToString]" WorkbookPath="[Path.Combine(inConfig(&quot;RutaArchivosGenerados&quot;).ToString, inConfig(&quot;ArchivoSalida&quot;).ToString+&quot;.xlsx&quot;)]" />
              </If.Then>
              <If.Else>
                <Throw DisplayName="Lanzar excepción" Exception="[new BusinessRuleException(&quot;EndProcess: No se encontró archivo&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </If.Else>
            </If>
          </Sequence>
          <Sequence DisplayName="Notificar Fallidos" sap:VirtualizedContainerService.HintSize="619.2,68.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Delete ContinueOnError="True" DisplayName="Eliminar" sap:VirtualizedContainerService.HintSize="580.8,22.4" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[Path.Combine(inConfig(&quot;RutaArchivosGenerados&quot;).ToString,inConfig(&quot;ArchivoFallidos&quot;).ToString + &quot;.xlsx&quot;)]" />
            <If Condition="[vDtbConsolidado.AsEnumerable().Where(Function(fila) fila(inConfig(&quot;ColEstado&quot;).ToString).ToString.Equals(&quot;EXCLUIDO&quot;) OR fila(inConfig(&quot;ColMotivo&quot;).ToString).ToString.Equals(&quot;20&quot;)).Count &gt; 0]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="580.8,1113.6" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <TryCatch DisplayName="Intentar capturar" sap:VirtualizedContainerService.HintSize="436.8,964" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                  <TryCatch.Try>
                    <Sequence DisplayName="Secuencia" sap:VirtualizedContainerService.HintSize="375.2,732.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Registrar mensaje" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;EndProcess: Notificando fallidos&quot;]" />
                      <ui:WriteRange AddHeaders="True" DataTable="[vDtbConsolidado.AsEnumerable().Where(Function(fila) fila(inConfig(&quot;ColEstado&quot;).ToString).ToString.Equals(&quot;EXCLUIDO&quot;) OR fila(inConfig(&quot;ColMotivo&quot;).ToString).ToString.Equals(&quot;20&quot;)).CopyToDataTable]" DisplayName="Escribir rango" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[Path.Combine(inConfig(&quot;RutaArchivosGenerados&quot;).ToString,inConfig(&quot;ArchivoFallidos&quot;).ToString + &quot;.xlsx&quot;)]" />
                      <WriteLine DisplayName="Escribir línea" sap:VirtualizedContainerService.HintSize="333.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[Path.Combine(inConfig(&quot;RutaArchivosGenerados&quot;).ToString,inConfig(&quot;ArchivoFallidos&quot;).ToString + &quot;.xlsx&quot;)]" />
                      <WriteLine DisplayName="Escribir línea" sap:VirtualizedContainerService.HintSize="333.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[inConfig(&quot;CorreoFallidos&quot;).ToString]" />
                      <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="El robot encontro registros por revisión en esta ejecución. Los registros se encuentran en el archivo adjunto en este mismo correo para su revisión." DisplayName="Enviar mensaje de correo de Outlook" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" IsBodyHtml="False" IsDraft="False" Subject="::El asistente virtual encontro registros por revisar en esta ejecución::" To="[inConfig(&quot;CorreoFallidos&quot;).ToString]">
                        <ui:SendOutlookMail.Files>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">[Path.Combine(inConfig("RutaArchivosGenerados").ToString,inConfig("ArchivoFallidos").ToString + ".xlsx")]</InArgument>
                          </scg:List>
                        </ui:SendOutlookMail.Files>
                      </ui:SendOutlookMail>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <ui:LogMessage DisplayName="Registrar mensaje" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[&quot;EndProcess:  No se pudo enviar correo con registros fallidos.&quot;]" />
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </If.Then>
            </If>
          </Sequence>
          <ui:PathExists DisplayName="Ruta existente" Exists="[vBoolParametrizacion]" sap:VirtualizedContainerService.HintSize="619.2,90.4" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[Path.Combine(inConfig(&quot;RutaParametrizacion&quot;).ToString, inConfig(&quot;ParametrizacionFile&quot;).ToString + &quot;.xlsx&quot;)]" PathType="File" />
          <If Condition="[vBoolParametrizacion]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="619.2,52.8" sap2010:WorkflowViewState.IdRef="If_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Secuencia" sap:VirtualizedContainerService.HintSize="478.4,771.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch DisplayName="Intentar capturar" sap:VirtualizedContainerService.HintSize="436.8,319.2" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                  <TryCatch.Try>
                    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[vDtbUDN]" DisplayName="Leer rango" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="[inConfig(&quot;HojaUDN&quot;).ToString]" WorkbookPath="[Path.Combine(inConfig(&quot;RutaParametrizacion&quot;).ToString, inConfig(&quot;ParametrizacionFile&quot;).ToString + &quot;.xlsx&quot;)]" />
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Throw DisplayName="Lanzar excepción" Exception="[new BusinessRuleException(&quot;GetTransactionData: No se pudo acceder a la tabla en la hoja&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_2" />
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <TryCatch DisplayName="Intentar capturar" sap:VirtualizedContainerService.HintSize="436.8,319.2" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                  <TryCatch.Try>
                    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[vDtbPaises]" DisplayName="Leer rango" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="[inConfig(&quot;HojaPaises&quot;).ToString]" WorkbookPath="[Path.Combine(inConfig(&quot;RutaParametrizacion&quot;).ToString, inConfig(&quot;ParametrizacionFile&quot;).ToString + &quot;.xlsx&quot;)]" />
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Throw DisplayName="Lanzar excepción" Exception="[new BusinessRuleException(&quot;GetTransactionData: No se pudo acceder a la tabla en la hoja&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_3" />
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </Sequence>
            </If.Then>
            <If.Else>
              <Throw DisplayName="Lanzar excepción" Exception="[new BusinessRuleException(&quot;GetTransactionData: no se encontro archivo parametrización&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_4" />
            </If.Else>
          </If>
          <Sequence DisplayName="Secuencia" sap:VirtualizedContainerService.HintSize="619.2,68.8" sap2010:WorkflowViewState.IdRef="Sequence_49">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Registrar mensaje" sap:VirtualizedContainerService.HintSize="1231.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;EndProcess: Se encontraron registros por liberar o rechazar&quot;]" />
            <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="1231.2,60" sap2010:WorkflowViewState.IdRef="Assign_33">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[vDtbPaisesAux]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[vDtbUDN.DefaultView.ToTable(True, inConfig("ColPaises").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[vDtbPaisesAux]" DisplayName="Para cada fila" sap:VirtualizedContainerService.HintSize="1231.2,5011.2" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1181.6,4862.4" sap2010:WorkflowViewState.IdRef="Sequence_48">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd:DataTable" Name="vDtbUDNs" />
                      <Variable x:TypeArguments="x:String" Name="vStrEntidad" />
                      <Variable x:TypeArguments="s:String[]" Name="vArrUDNs" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="1140,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">[vArrUDNs]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">[vDtbUDN.AsEnumerable.Where(Function(fila) fila(inConfig("ColPaises").ToString).ToString.Equals(row(inConfig("ColPaises").ToString))).Select(Function(fila) fila(inConfig("ColUDN").ToString).ToString).ToArray]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[inConfig(&quot;AmbientePoC&quot;).ToString.Trim.ToUpper.Equals(&quot;PROD&quot;)]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="1140,452" sap2010:WorkflowViewState.IdRef="If_20">
                      <If.Then>
                        <Sequence DisplayName="Secuencia" sap:VirtualizedContainerService.HintSize="548,302.4" sap2010:WorkflowViewState.IdRef="Sequence_43">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[vDtbPaises.AsEnumerable.Where(Function(fila) fila(inConfig(&quot;ColPaises&quot;).ToString).ToString.Equals(row(inConfig(&quot;ColPaises&quot;).ToString).ToString)).Count &gt; 0]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="506.4,209.6" sap2010:WorkflowViewState.IdRef="If_18">
                            <If.Then>
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[vStrEntidad]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[vDtbPaises.AsEnumerable.Where(Function(fila) fila(inConfig("ColPaises").ToString).ToString.Equals(row(inConfig("ColPaises").ToString).ToString))(0)(inConfig("ColEntidadPro").ToString).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <Throw DisplayName="Lanzar excepción" Exception="[new BusinessRuleException(&quot;GetTransactionData: No se encontró instancia para el pais&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_8" />
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Secuencia" sap:VirtualizedContainerService.HintSize="548,302.4" sap2010:WorkflowViewState.IdRef="Sequence_44">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[vDtbPaises.AsEnumerable.Where(Function(fila) fila(inConfig(&quot;ColPaises&quot;).ToString).ToString.Equals(row(inConfig(&quot;ColPaises&quot;).ToString).ToString)).Count &gt; 0]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="506.4,209.6" sap2010:WorkflowViewState.IdRef="If_19">
                            <If.Then>
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[vStrEntidad]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[vDtbPaises.AsEnumerable.Where(Function(fila) fila(inConfig("ColPaises").ToString).ToString.Equals(row(inConfig("ColPaises").ToString).ToString))(0)(inConfig("ColEntidadCal").ToString).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <Throw DisplayName="Lanzar excepción" Exception="[new BusinessRuleException(&quot;GetTransactionData: No se encontró instancia para el pais&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_9" />
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Else>
                    </If>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LoginFrog workflow" sap:VirtualizedContainerService.HintSize="1140,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Apps\Frog\LoginFrog.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="inConfig">[in_Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="inStrInstancia">[vStrEntidad]</InArgument>
                        <InArgument x:TypeArguments="x:Boolean" x:Key="inBoolValidar">True</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="1140,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[vDtbUDNs]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[vDtbUDN.AsEnumerable.Where(Function(fila) fila(inConfig("ColPaises").ToString).ToString.Equals(row(inConfig("ColPaises").ToString))).CopyToDataTable]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[vDtbUDNs]" DisplayName="Para cada fila" sap:VirtualizedContainerService.HintSize="1140,3824.8" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row1" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="458.4,3676" sap2010:WorkflowViewState.IdRef="Sequence_47">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="True" ClickBeforeTyping="True" DisplayName="Escribir en 'push button  Item'" EmptyField="True" sap:VirtualizedContainerService.HintSize="416.8,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_8" Text="[row1(inConfig(&quot;ColUDN&quot;).ToString).ToString+ &quot;[k(enter)]&quot;]">
                              <ui:TypeInto.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8def96be-685f-426d-87c6-77d5f1ecde6c" InformativeScreenshot="a1fdd540923b5f9b71825ba8604d4e6a" Selector="&lt;wnd app='frog.exe' ctrlname='Main' /&gt;&lt;ctrl name='Status Bar' role='property page' /&gt;&lt;ctrl idx='2' name='Item' role='push button' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:TypeInto.Target>
                            </ui:TypeInto>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Clic 'push button'" sap:VirtualizedContainerService.HintSize="416.8,107.2" sap2010:WorkflowViewState.IdRef="Click_10" KeyModifiers="None" MouseButton="BTN_LEFT">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8799768f-fd5e-4b88-be9e-598d1dde2d2a" InformativeScreenshot="d237058f022ba68020024db9bf15d6a9" Selector="&lt;wnd app='frog.exe' ctrlname='Main' /&gt;&lt;ctrl name='The Ribbon' role='property page' /&gt;&lt;ctrl name='Lower Ribbon' role='pane' /&gt;&lt;ctrl name='Principal' role='pane' /&gt;&lt;ctrl name='Objetos y Procesos' role='tool bar' /&gt;&lt;ctrl name='Administración' role='push button' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Clic 'menu item'" sap:VirtualizedContainerService.HintSize="416.8,107.2" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="63164a42-1d5e-43d3-aab9-eb2863b87334" InformativeScreenshot="272d126686d97699c17a956a81d1cf28" Selector="&lt;wnd app='frog.exe' ctrlname='Main' /&gt;&lt;wnd ctrlname='MainRibbon' /&gt;&lt;ctrl idx='1' name='Cerrar y Reabrir el objeto actual' role='menu item' /&gt;">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                            <Sequence DisplayName="Acceder a procesos" sap:VirtualizedContainerService.HintSize="416.8,3113.6" sap2010:WorkflowViewState.IdRef="Sequence_46">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="s:DateTime" Name="vDataFecha" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Clic 'push button  Procesos'" sap:VirtualizedContainerService.HintSize="375.2,107.2" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2759c7be-e7f3-4391-874a-d10698e3cdba" InformativeScreenshot="593b80e3d49f4188c7f0046580707a8f" Selector="&lt;wnd app='frog.exe' ctrlname='Main' idx='1' /&gt;&lt;ctrl name='The Ribbon' role='property page' /&gt;&lt;ctrl name='Lower Ribbon' role='pane' /&gt;&lt;ctrl name='Principal' role='pane' /&gt;&lt;ctrl name='Objetos y Procesos' role='tool bar' /&gt;&lt;ctrl name='Procesos' role='push button' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:UiElementExists Exists="{x:Null}" DisplayName="Elemento existente 'WindowsForms10.Window.8...'" sap:VirtualizedContainerService.HintSize="375.2,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                                <ui:UiElementExists.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="372e4715-4a51-44f4-b872-db04ac3c4518" InformativeScreenshot="31c353f0e03bdc0ad9f090119a482c91" Selector="&lt;wnd app='frog.exe' omit:cls='WindowsForms10.Window.*' /&gt;&lt;wnd ctrlname='dockObjetos' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:UiElementExists.Target>
                              </ui:UiElementExists>
                              <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="True" ClickBeforeTyping="True" DisplayName="Escribir en 'push button'" EmptyField="True" sap:VirtualizedContainerService.HintSize="375.2,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_9">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f3a7665b-9212-46fe-bcd5-f63c90d5661d" InformativeScreenshot="75cbeb91cc3f72cf029cd96129d24703" Selector="&lt;wnd app='frog.exe' cls='WindowsForms10.Window.*' /&gt;&lt;wnd ctrlname='dockObjetos' /&gt;&lt;wnd ctrlname='dockPanel1_Container' /&gt;&lt;wnd aaname='Dock Top' cls='WindowsForms10.Window.*' /&gt;&lt;ctrl name='Barra de Objetos' role='tool bar' /&gt;&lt;ctrl name='Filtrar Objeto' role='push button' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:TypeInto.Target>
                                <ui:TypeInto.Text>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:TypeInto.Text>
                              </ui:TypeInto>
                              <ui:SetToClipboard DisplayName="Establecer en portapapeles" sap:VirtualizedContainerService.HintSize="375.2,60" sap2010:WorkflowViewState.IdRef="SetToClipboard_2" Text="[inConfig(&quot;Proceso&quot;).ToString]" />
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Clic 'push button'" sap:VirtualizedContainerService.HintSize="375.2,107.2" sap2010:WorkflowViewState.IdRef="Click_13" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="117bb939-f070-470f-b3fb-115133a71973" InformativeScreenshot="b819b554f1673d9a7428cdd24c88e5d7" Selector="&lt;wnd app='frog.exe' omit:cls='WindowsForms10.Window.*' /&gt;&lt;wnd ctrlname='dockObjetos' /&gt;&lt;wnd ctrlname='dockPanel1_Container' /&gt;&lt;wnd aaname='Dock Top' omit:cls='WindowsForms10.Window.*' /&gt;&lt;ctrl name='Barra de Objetos' role='tool bar' /&gt;&lt;ctrl name='Filtrar Objeto' role='push button' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Enviar tecla de acceso rápido 'push button'" sap:VirtualizedContainerService.HintSize="375.2,156" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="v" KeyModifiers="Ctrl">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e91ae762-9ab9-440d-85af-f8be26096579" InformativeScreenshot="b819b554f1673d9a7428cdd24c88e5d7" Selector="&lt;wnd app='frog.exe' omit:cls='WindowsForms10.Window.*' /&gt;&lt;wnd ctrlname='dockObjetos' /&gt;&lt;wnd ctrlname='dockPanel1_Container' /&gt;&lt;wnd aaname='Dock Top' omit:cls='WindowsForms10.Window.*' /&gt;&lt;ctrl name='Barra de Objetos' role='tool bar' /&gt;&lt;ctrl name='Filtrar Objeto' role='push button' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:SendHotkey.Target>
                              </ui:SendHotkey>
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_DOUBLE" DisplayName="Clic 'cell treeListColumn1'" sap:VirtualizedContainerService.HintSize="375.2,107.2" sap2010:WorkflowViewState.IdRef="Click_14" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0837f324-ae7d-4408-af72-09e39ebea48f" InformativeScreenshot="5b749af40538cfb0cacf34caef609a5b" Selector="&lt;wnd app='frog.exe' omit:cls='WindowsForms10.Window.*' /&gt;&lt;wnd ctrlname='dockObjetos' /&gt;&lt;wnd ctrlname='dockPanel1_Container' /&gt;&lt;wnd ctrlname='panel1' /&gt;&lt;ctrl idx='1' name='Data Panel' role='grouping' /&gt;&lt;ctrl name='Node0' role='outline item' /&gt;&lt;ctrl name='treeListColumn1 row 0' role='cell' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:Check ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" AlterIfDisabled="True" DisplayName="Comprobar 'radio button'" sap:VirtualizedContainerService.HintSize="375.2,107.2" sap2010:WorkflowViewState.IdRef="Check_2">
                                <ui:Check.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a1196141-c5fb-4de2-8bb8-f56f8340ccd9" InformativeScreenshot="1e53ea1abbfa1d6cc73bf6da75c5a0a5" Selector="&lt;wnd app='frog.exe' ctrlname='Main' /&gt;&lt;wnd ctrlname='Lista' /&gt;&lt;wnd ctrlname='pnlContainerPrincipal' /&gt;&lt;wnd ctrlname='dockFiltroRemoto' /&gt;&lt;wnd ctrlname='dockPanel1_Container' /&gt;&lt;wnd ctrlname='pnlOptSql' /&gt;&lt;wnd ctrlname='groupControl1' /&gt;&lt;ctrl name='Definición Pedidos X Fecha Pedido, UDN y Ruta - SQL' role='list' /&gt;&lt;ctrl name='Pedidos por Estado' role='radio button' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Check.Target>
                              </ui:Check>
                              <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="True" DisplayName="Escribir en 'WindowsForms10.EDIT.app...'" EmptyField="True" sap:VirtualizedContainerService.HintSize="375.2,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_10" Text="[inConfig(&quot;FrogEstado&quot;).ToString+&quot;[k(enter)]&quot;]">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="135e6bd1-611c-4805-922f-b43cee2da7ac" InformativeScreenshot="402dd2011c083f3d399021fffecb766f" Selector="&lt;wnd app='frog.exe' ctrlname='Main' /&gt;&lt;wnd ctrlname='Lista' /&gt;&lt;wnd ctrlname='pnlContainerPrincipal' /&gt;&lt;wnd ctrlname='dockFiltroRemoto' /&gt;&lt;wnd ctrlname='dockPanel1_Container' /&gt;&lt;wnd ctrlname='panelControl2' /&gt;&lt;wnd ctrlname='groupControl3' /&gt;&lt;wnd ctrlname='SQLPanel' /&gt;&lt;wnd ctrlname='pnlControles' /&gt;&lt;wnd ctrlname='txtS_MAQEDO' /&gt;&lt;wnd cls='WindowsForms10.EDIT.*' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:TypeInto.Target>
                              </ui:TypeInto>
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="375.2,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:DateTime">[vDataFecha]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:DateTime">[now.AddDays(-1)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke AnteriorDiaHabil workflow" sap:VirtualizedContainerService.HintSize="375.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Process\AnteriorDiaHabil.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InOutArgument x:TypeArguments="s:DateTime" x:Key="inoutDateFecha">[vDataFecha]</InOutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="True" ClickBeforeTyping="True" DisplayName="Escribir en 'WindowsForms10.EDIT.app...'" EmptyField="True" sap:VirtualizedContainerService.HintSize="375.2,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_11" Text="[vDataFecha.Date.ToShortDateString+ &quot;[k(enter)]&quot;]">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="93e35d2b-d2fb-4755-bc9f-416d1cb25e73" InformativeScreenshot="fe2f22980b1ae72bb32fb47b2cf296e0" Selector="&lt;wnd app='frog.exe' ctrlname='Main' /&gt;&lt;wnd ctrlname='Lista' /&gt;&lt;wnd ctrlname='pnlContainerPrincipal' /&gt;&lt;wnd ctrlname='dockFiltroRemoto' /&gt;&lt;wnd ctrlname='dockPanel1_Container' /&gt;&lt;wnd ctrlname='panelControl2' /&gt;&lt;wnd ctrlname='groupControl3' /&gt;&lt;wnd ctrlname='SQLPanel' /&gt;&lt;wnd ctrlname='pnlControles' /&gt;&lt;wnd ctrlname='txtFECHA_INI' /&gt;&lt;wnd omit:aaname='jueves, 2 de julio de 2020' cls='WindowsForms10.EDIT.*' omit:title='02/07/2020' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:TypeInto.Target>
                              </ui:TypeInto>
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="375.2,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:DateTime">[vDataFecha]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:DateTime">[now.AddDays(CInt(row1(inConfig("ColDiasMas").ToString).ToString))]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SiguienteDiaHabil workflow" sap:VirtualizedContainerService.HintSize="375.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Process\SiguienteDiaHabil.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InOutArgument x:TypeArguments="s:DateTime" x:Key="inoutDateFecha">[vDataFecha]</InOutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="True" ClickBeforeTyping="True" DisplayName="Escribir en 'WindowsForms10.EDIT.app...'" EmptyField="True" sap:VirtualizedContainerService.HintSize="375.2,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_12" Text="[now.AddDays(2).ToShortDateString+ &quot;[k(enter)]&quot;]">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a6855344-3c0b-4ad4-9662-b18a6166d950" InformativeScreenshot="806ceb771a44637a96a671cf1ed2f00b" Selector="&lt;wnd app='frog.exe' ctrlname='Main' /&gt;&lt;wnd ctrlname='Lista' /&gt;&lt;wnd ctrlname='pnlContainerPrincipal' /&gt;&lt;wnd ctrlname='dockFiltroRemoto' /&gt;&lt;wnd ctrlname='dockPanel1_Container' /&gt;&lt;wnd ctrlname='panelControl2' /&gt;&lt;wnd ctrlname='groupControl3' /&gt;&lt;wnd ctrlname='SQLPanel' /&gt;&lt;wnd ctrlname='pnlControles' /&gt;&lt;wnd ctrlname='txtFECHA_FIN' /&gt;&lt;wnd cls='WindowsForms10.EDIT.*' aastate='enfocable' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:TypeInto.Target>
                              </ui:TypeInto>
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Clic 'push button'" sap:VirtualizedContainerService.HintSize="375.2,107.2" sap2010:WorkflowViewState.IdRef="Click_15" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cd6411c6-b0c9-4c5c-b5a4-1220b35d917e" InformativeScreenshot="35f8734baebcc66f25549c8aaadd9b74" Selector="&lt;wnd app='frog.exe' ctrlname='Main' /&gt;&lt;wnd ctrlname='Lista' /&gt;&lt;wnd ctrlname='pnlContainerPrincipal' /&gt;&lt;wnd ctrlname='dockFiltroRemoto' /&gt;&lt;wnd ctrlname='dockPanel1_Container' /&gt;&lt;wnd aaname='Dock Top' omit:cls='WindowsForms10.Window.*' /&gt;&lt;ctrl name='barRemoto' role='tool bar' /&gt;&lt;ctrl name='Aplicar filtro' role='push button' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <Sequence sap:VirtualizedContainerService.HintSize="375.2,684.8" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Delay_3" />
                                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Clic 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_16" KeyModifiers="None" MouseButton="BTN_LEFT">
                                  <ui:Click.CursorPosition>
                                    <ui:CursorPosition Position="Center">
                                      <ui:CursorPosition.OffsetX>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetX>
                                      <ui:CursorPosition.OffsetY>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetY>
                                    </ui:CursorPosition>
                                  </ui:Click.CursorPosition>
                                  <ui:Click.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9bc963f1-9d9f-421e-8625-6f8c94ae7676" InformativeScreenshot="35f8734baebcc66f25549c8aaadd9b74" Selector="&lt;wnd app='frog.exe' ctrlname='Main' /&gt;&lt;wnd ctrlname='Lista' /&gt;&lt;wnd ctrlname='pnlContainerPrincipal' /&gt;&lt;wnd ctrlname='dockFiltroRemoto' /&gt;&lt;wnd ctrlname='dockPanel1_Container' /&gt;&lt;wnd aaname='Dock Top' cls='WindowsForms10.Window.*' /&gt;&lt;ctrl name='barRemoto' role='tool bar' /&gt;&lt;ctrl name='Aplicar filtro' role='push button' /&gt;">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:Click.Target>
                                </ui:Click>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ScreenshotFrog workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Process\ScreenshotFrog.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="inConfig">[in_Config]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="inName">[row1(inConfig("ColUDN").ToString).ToString]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Clic 'page tab  Principal'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_17" KeyModifiers="None" MouseButton="BTN_LEFT">
                                  <ui:Click.CursorPosition>
                                    <ui:CursorPosition Position="Center">
                                      <ui:CursorPosition.OffsetX>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetX>
                                      <ui:CursorPosition.OffsetY>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetY>
                                    </ui:CursorPosition>
                                  </ui:Click.CursorPosition>
                                  <ui:Click.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6c394d76-dc7d-4d1e-9c43-a729c2f2feee" InformativeScreenshot="9e8155ae7c955f2c244401f5ed3fe27e" Selector="&lt;wnd app='frog.exe' ctrlname='Main' /&gt;&lt;ctrl idx='1' name='The Ribbon' role='property page' /&gt;&lt;ctrl name='Ribbon Tabs' role='page tab list' /&gt;&lt;ctrl name='Principal' role='page tab' /&gt;">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:Click.Target>
                                </ui:Click>
                                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Clic 'push button'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_18" KeyModifiers="None" MouseButton="BTN_LEFT">
                                  <ui:Click.CursorPosition>
                                    <ui:CursorPosition Position="Center">
                                      <ui:CursorPosition.OffsetX>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetX>
                                      <ui:CursorPosition.OffsetY>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetY>
                                    </ui:CursorPosition>
                                  </ui:Click.CursorPosition>
                                  <ui:Click.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="45bbdbf9-0a18-4f43-ae13-e996b917ba20" InformativeScreenshot="42bf8890fdc57f7af832825739656ba9" Selector="&lt;wnd app='frog.exe' ctrlname='Main' /&gt;&lt;ctrl idx='1' name='The Ribbon' role='property page' /&gt;&lt;ctrl name='Lower Ribbon' role='pane' /&gt;&lt;ctrl name='Principal' role='pane' /&gt;&lt;ctrl name='Ventana' role='tool bar' /&gt;&lt;ctrl name='Cerrar Ventanas' role='push button' /&gt;">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:Click.Target>
                                </ui:Click>
                              </Sequence>
                            </Sequence>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                    </ui:ForEachRow>
                    <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Cancelar proceso" sap:VirtualizedContainerService.HintSize="1140,22.4" sap2010:WorkflowViewState.IdRef="KillProcess_4" ProcessName="FROG_Boot" />
                    <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Cancelar proceso" sap:VirtualizedContainerService.HintSize="1140,22.4" sap2010:WorkflowViewState.IdRef="KillProcess_5" ProcessName="Frog" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
          </Sequence>
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="619.2,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_9">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="524.8,335.2" sap2010:WorkflowViewState.IdRef="Sequence_50">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[vDtbConsolidado.AsEnumerable.where(Function(fila) fila(inConfig(&quot;ColEstado&quot;).ToString).ToString.Equals(&quot;POR LIBERAR&quot;) or fila(inConfig(&quot;ColEstado&quot;).ToString).ToString.Equals(&quot;POR RECHAZAR&quot;)).Count &gt; 0]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="483.2,242.4" sap2010:WorkflowViewState.IdRef="If_9">
                  <If.Else>
                    <ui:LogMessage DisplayName="Registrar mensaje" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Warn" Message="[&quot;EndProcess: No se encontraron registros por liberar o rechazar&quot;]" />
                  </If.Else>
                </If>
              </Sequence>
            </ui:CommentOut.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CommentOut>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InformeFinal workflow" sap:VirtualizedContainerService.HintSize="619.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Process\InformeFinal.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="inConfig">[in_Config]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="inStrRuta">[Path.Combine(inConfig("RutaArchivosGenerados").ToString, inConfig("ArchivoSalida").ToString+".xlsx")]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="inStrRutaOut">[Path.Combine(inConfig("RutaArchivosGenerados").ToString, inConfig("FileInformeSalida").ToString+".xlsx")]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Sequence DisplayName="Informe final" sap:VirtualizedContainerService.HintSize="619.2,68.8" sap2010:WorkflowViewState.IdRef="Sequence_31">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_20">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[vListPantallas]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_21">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[vListPantallas]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[System.IO.Directory.GetFiles(inConfig("RutaPantallazos").ToString).ToList]</InArgument>
              </Assign.Value>
            </Assign>
            <AddToCollection x:TypeArguments="x:String" Collection="[vListPantallas]" DisplayName="Añadir a colección" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[Path.Combine(inConfig(&quot;RutaArchivosGenerados&quot;).ToString, inConfig(&quot;ArchivoSalida&quot;).ToString+&quot;.xlsx&quot;)]" />
            <AddToCollection x:TypeArguments="x:String" Collection="[vListPantallas]" DisplayName="Añadir a colección" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[Path.Combine(inConfig(&quot;RutaArchivosGenerados&quot;).ToString, inConfig(&quot;FileInformeSalida&quot;).ToString+&quot;.xlsx&quot;)]" />
          </Sequence>
          <TryCatch DisplayName="Intentar capturar" sap:VirtualizedContainerService.HintSize="619.2,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Path.Combine(inConfig(&quot;RutaCompartida&quot;).ToString, inConfig(&quot;ArchivoSalida&quot;).ToString+now.ToString.Replace(&quot;/&quot;,&quot;-&quot;).Replace(&quot;:&quot;,&quot;.&quot;)+&quot;.xlsx&quot; )]" DisplayName="Copiar archivo" sap:VirtualizedContainerService.HintSize="433.6,160" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[Path.Combine(inConfig(&quot;RutaArchivosGenerados&quot;).ToString, inConfig(&quot;ArchivoSalida&quot;).ToString+&quot;.xlsx&quot;)]" />
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="436.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:LogMessage DisplayName="Registrar mensaje" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;No se pudo copiar el archivo en la ruta compartida por la siguiente excepción: &quot;+exception.Message]" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <Delay Duration="00:02:00" sap:VirtualizedContainerService.HintSize="619.2,22.4" sap2010:WorkflowViewState.IdRef="Delay_2" />
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>